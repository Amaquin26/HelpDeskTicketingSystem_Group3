@{
    ViewData["Title"] = "User Ticket Page";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}
@model ASI.Basecode.Services.ServiceModels.UserTicketListViewModel

<!-- Main Content -->
<div class="container content">
    <div class="row">

        <h3 class=""><strong>Submitted Tickets:</strong></h3>

        <div class="d-flex justify-content-between mb-4">
            <div>
                <div class="btn-group" role="group" aria-label="Filter Tickets">
                    <button type="button" class="btn btn-danger" onclick="filterTickets('all')">All</button>
                    <button type="button" class="btn btn-outline-danger" onclick="filterTickets('open')">Open</button>
                    <button type="button" class="btn btn-outline-danger" onclick="filterTickets('in-progress')">In Progress</button>
                    <button type="button" class="btn btn-outline-danger" onclick="filterTickets('closed')">Closed</button>
                </div>
            </div>

            <form method="get" asp-action="Index" id="searchForm">
                <div class="input-group">
                    <input type="text" class="form-control" name="searchQuery" value="@Context.Request.Query["searchQuery"]" placeholder="Search Ticket" aria-label="Search Ticket" aria-describedby="button-addon2">
                    <button class="btn btn-secondary" type="submit" id="button-addon2">Search</button>
                </div>
            </form>
        </div>

        <!-- Filter Options -->
        @if (Model.Tickets != null && Model.Tickets.Any())
        {
            @foreach (var ticket in Model.Tickets)
            {
                <div class="col-md-4 mb-3">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Ticket</h5>
                            <p class="card-text"><strong>Created By: </strong>@ticket.CreatedBy</p>
                            <p class="card-text"><strong>Issue: </strong>@ticket.Title</p>
                            <p class="card-text"><strong>Status: </strong> @ticket.StatusName</p>
                            <p class="card-text"><strong>Priority: </strong>@ticket.PriorityName</p>
                            <p class="card-text"><strong>Category: </strong>@ticket.CategoryName</p>
                            <a asp-action="ViewTicket" asp-controller="Ticket" asp-route-id="@ticket.TicketId" class="btn btn-danger">View Details</a>
                        </div>
                    </div>
                </div>
            }
        }else
        {
            <h4>No tickets found.</h4>
        }

        <!-- Pagination Controls -->
        <div class="pagination d-flex justify-content-center gap-2">
            @if (Model.CurrentPage > 1)
            {
                <a href="@Url.Action("Index", new { page = Model.CurrentPage - 1, searchQuery = Model.SearchQuery })" class="btn btn-sm btn-outline-secondary">Previous</a>
            }

            @for (var i = 1; i <= Model.TotalPages; i++)
            {
                <a href="@Url.Action("Index", new { page = i, searchQuery = Model.SearchQuery })" class="btn btn-sm btn-outline-secondary @((i == Model.CurrentPage) ? "active" : "")">@i</a>
            }

            @if (Model.CurrentPage < Model.TotalPages)
            {
                <a href="@Url.Action("Index", new { page = Model.CurrentPage + 1, searchQuery = Model.SearchQuery })" class="btn btn-sm btn-outline-secondary">Next</a>
            }
        </div>
    </div>
</div>