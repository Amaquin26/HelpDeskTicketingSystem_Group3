@model ASI.Basecode.Services.Dto.TeamDetailsDto
@using System.Security.Claims;
@{
    ViewData["Title"] = "Team Details Page";
}

<div class="content p-4" style="margin-left: 200px;">
    <div class="d-flex justify-content-between mb-3">
        @if (User.FindFirst("Role")?.Value == "Super Admin" || User.FindFirst("Role")?.Value == "Admin")
        {
            <!-- Back Button on the Left -->
            <a asp-action="Index" class="btn">
                <i class="fas fa-arrow-left"></i> Back
            </a>
        }

        <!-- Edit and Delete Buttons on the Right -->
        @if (User.FindFirst("Role")?.Value == "Super Admin" || User.FindFirst("Role")?.Value == "Admin")
        {
            <div>
                <a asp-action="Edit" asp-route-id="@Model.TeamId" class="btn btn-dark me-2">
                    <i class="fas fa-edit"></i> Edit
                </a>
                <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteTeamModal-@Model.TeamId">
                    <i class="fas fa-trash-alt"></i> Delete
                </button>
            </div>
        }
    </div>

    <h2 class="mb-4">Team Details</h2>

    <!-- Team Info Card -->
    <div class="card mb-4">
        <div class="card-header">
            <p class="mb-0"><strong>Team Name:</strong> @Model.Name</p>
        </div>
        <div class="card-body">
            <div class="row mb-2">
                <div class="col-md-4">
                    <p class="mb-0"><strong>Team Leader: </strong>
                        @{
                            if (Model.LeaderName != null)
                            {
                                <span>@Model.LeaderName</span>
                            }else{
                                <span>No Leader</span>
                            }
                        }
                   </p>
                </div>
                <div class="col-md-4">
                    <p class="mb-0"><strong>Specialization:</strong> @Model.Specialization</p>
                </div>
                <div class="col-md-4">
                    <p class="mb-0"><strong>Customer Satisfaction Rating:</strong> @Model.CustomerRating.ToString("F2") /5</p>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <p class="mb-0"><strong>Tickets Resolved:</strong> @Model.TicketsResolved</p>
                </div>
                <div class="col-md-4">
                    <p class="mb-0"><strong>Average Resolution Time:</strong> @Model.AverageResolutionTimeString</p>
                </div>
            </div>
        </div>
    </div>

    <h3 class="mb-4"><strong>Team Members</strong></h3>

    @if (User.FindFirst("Role")?.Value == "Super Admin" || User.FindFirst("Role")?.Value == "Admin" || User.FindFirst("UserId")?.Value == Model.TeamLeaderId)
    {
        <a class="btn btn-success mb-3" asp-action="AddMember" asp-route-teamId="@Model.TeamId">
            <i class="fas fa-plus"></i>
            Add Team Member
        </a>
    }

    @if(Model.TeamMebers.Count > 0)
    {
        <div class="table-responsive">
            <table class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">Email</th>
                        <th scope="col">Role</th>
                        @if (User.FindFirst("Role")?.Value == "Super Admin" || User.FindFirst("Role")?.Value == "Admin" || User.FindFirst("UserId")?.Value == Model.TeamLeaderId)
                        {
                            <th class="action-column">Actions</th>
                        }
                    </tr>
                </thead>
                <tbody id="userItems">
                    @foreach (var member in Model.TeamMebers)
                    {
                        <tr>
                            <td>@member.Name</td>
                            <td>@member.Email</td>
                            <td>@member.Role</td>
                            @if (User.FindFirst("Role")?.Value == "Super Admin" || User.FindFirst("Role")?.Value == "Admin" || User.FindFirst("UserId")?.Value == Model.TeamLeaderId)
                            {
                                <td>
                                    <button type="button" class="btn btn-danger btn-sm delete-btn" data-bs-toggle="modal" data-bs-target="#deleteMemberModal-@member.UserId">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <h5 class="mb-4">No Members</h5>
    }

    <h3 class="mb-4"><strong>Assigned Tickets</strong></h3>

    <!-- Filter Options -->
    <div class="mb-4">
        <div class="btn-group" role="group" aria-label="Filter Tickets">
            <button type="button" class="btn btn-outline-dark @((Model.Filter == 0) ? "active" : "")" onclick="filterTickets('0')">All</button>
            <button type="button" class="btn btn-outline-dark @((Model.Filter == 1) ? "active" : "")" onclick="filterTickets('1')">Open</button>
            <button type="button" class="btn btn-outline-dark @((Model.Filter == 2) ? "active" : "")" onclick="filterTickets('2')">In Progress</button>
            <button type="button" class="btn btn-outline-dark @((Model.Filter == 3) ? "active" : "")" onclick="filterTickets('3')">Resolved</button>
            <button type="button" class="btn btn-outline-dark @((Model.Filter == 4) ? "active" : "")" onclick="filterTickets('4')">Closed</button>
            <button type="button" class="btn btn-outline-dark @((Model.Filter == 5) ? "active" : "")" onclick="filterTickets('5')">On Hold</button>
        </div>
    </div>

    <div class="row">
        @if (Model.Tickets != null && Model.Tickets.Any())
        {
            @foreach (var ticket in Model.Tickets)
            {
                <div class="col-md-4 mb-4">
                    <div class="card border h-100">
                        <div class="card-body d-flex flex-column">
                            <!-- Title -->
                            <h5 class="card-title text-dark fw-bold">@ticket.Title</h5>

                            <div class="mt-auto border-top pt-3">
                                <!-- Date Added -->
                                <p class="card-text small text-muted">
                                    <strong>Date Created:</strong> @ticket.DateAdded.ToString("MMMM dd, yyyy")
                                </p>

                                <!-- Status -->
                                <p class="card-text small text-muted">
                                    <strong>Status:</strong> <span class="badge bg-@GetStatusBadgeClass(ticket.StatusName) text-uppercase">@ticket.StatusName</span>
                                </p>

                                <!-- Category -->
                                <p class="card-text small text-muted">
                                    <strong>Category:</strong> @ticket.CategoryName
                                </p>

                                <!-- View Details Button -->
                                <a asp-action="ViewTicket" asp-controller="Ticket" asp-route-id="@ticket.TicketId" class="btn btn-outline-dark w-100">
                                    View Details
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <h4 class="text-center">No tickets found.</h4>
        }
    </div>
</div>

<!-- Delete Team Modal -->
<div class="modal fade" id="deleteTeamModal-@Model.TeamId" tabindex="-1" aria-labelledby="deleteTeamModal-@Model.TeamId" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteTeamModalLabel">Delete Team</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this user?</p>
                <p><strong>Team Name: </strong>@Model.Name</p>
                <p><strong>Team Leader: </strong>@Model.LeaderName</p>
                <form asp-action="Delete" asp-controller="Team" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="TeamId" value="@Model.TeamId" />
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Remove TeamMember Modal -->
@foreach (var member in Model.TeamMebers)
{
    <div class="modal fade" id="deleteMemberModal-@member.UserId" tabindex="-1" aria-labelledby="deleteMemberModal-@member.UserId" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteTeamModalLabel">Delete Team Member</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to remove this member from the team?</p>
                    <p><strong>Name: </strong>@member.Name</p>
                    <p><strong>Email: </strong>@member.Email</p>
                    <form asp-action="RemoveTeamMember" asp-controller="Team" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="UserId" value="@member.UserId" />
                        <input type="hidden" name="TeamId" value="@Model.TeamId" />
                        <button type="submit" class="btn btn-danger">Remove</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@functions {
    public string GetStatusBadgeClass(string status)
    {
        return status.ToLower() switch
        {
            "open" => "primary",
            "in progress" => "warning",
            "resolved" => "success",
            "closed" => "danger",
            "on hold" => "secondary",
            _ => "dark" // Fallback for unexpected values
        };
    }
}

<script>
    function filterTickets(statusId) {
        let url = new URL(window.location.href);
        let searchParams = url.searchParams;

        // If no filter is selected or 'All' is clicked, reset the filter
        if (statusId !== undefined) {
            searchParams.set('filter', statusId);  // 0 for "All"
        }

        // Update the URL without reloading the page (optional, for SPA behavior)
        window.history.pushState({}, '', url.toString());

        // Submit the form or trigger a page reload
        window.location.href = url.toString();  // Or use AJAX for dynamic content loading
    }
</script>