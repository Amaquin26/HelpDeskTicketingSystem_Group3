@model ASI.Basecode.Services.Dto.UserDetailsDto
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using System.Security.Claims;
@{
    ViewData["Title"] = "Profile";
}

<div class="content p-4" style="margin-left: 200px;">
    <h3 class="mb-4"><strong>Your Details</strong></h3>

    <a asp-action="UpdateProfile" asp-controller="User" class="btn btn-dark mb-3" id="button-addon2">
        Update Profile
    </a>

    <!-- Agent Info Card -->
    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <p class="mb-0"><strong>@Model.RoleName Name:</strong> @Model.Name</p>
            <button class="edit btn text-secondary"><small>View Activity</small></button>
        </div>
        <div class="card-body">
            <div class="row mb-2">
                <div class="col-md-4">
                    <p class="mb-0"><strong>Email:</strong> @Model.Email</p>
                </div>
                <div class="col-md-4">
                    <p class="mb-0"><strong>Role:</strong> @Model.RoleName</p>
                </div>
                @{
                    if (Model.RoleName != "User")
                    {
                        <div class="col-md-4">
                            <div class="d-flex align-items-center">
                                <strong class="me-2">Customer Satisfaction Rating:</strong>
                                <div class="star-rating" id="star-rating-@Model.Email"></div>
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="row">
                @if (Model.RoleName != "User")
                {
                    <div class="col-md-4">
                        <p class="mb-0"><strong>Tickets Resolved:</strong> @Model.TicketsResolved</p>
                    </div>
                    <div class="col-md-4">
                        <p class="mb-0"><strong>Average Resolution Time:</strong> @Model.AverageResolutionTimeString</p>
                    </div>
                    <div class="col-md-4">
                        <p class="mb-0">
                            <strong>Team:</strong>
                            @{
                                if (Model.TeamName != null)
                                {
                                    <span>@Model.TeamName</span>
                                }
                                else
                                {
                                    <span>No Team</span>
                                }
                            }
                        </p>
                    </div>
                }
            </div>
        </div>
    </div>

    @{
        if (Model.RoleName != "User")
        {
            <h3 class="mb-4"><strong>Assigned Tickets</strong></h3>
        }
        else
        {
            <h3 class="mb-4"><strong>Submitted Tickets</strong></h3>
        }

        <div class="mb-4">
            <div class="btn-group" role="group" aria-label="Filter Tickets">
                <button type="button" class="btn btn-dark">All</button>
                <button type="button" class="btn btn-dark">Open</button>
                <button type="button" class="btn btn-dark">In Progress</button>
                <button type="button" class="btn btn-dark">Closed</button>
            </div>
        </div>
        <div class="row">
            @foreach (var ticket in Model.Tickets)
            {
                <div class="col-md-4 mb-4">
                    <div class="card border h-100">
                        <div class="card-body d-flex flex-column">
                            <!-- Title -->
                            <h5 class="card-title text-dark fw-bold">@ticket.Title</h5>

                            <div class="mt-auto border-top pt-3">
                                <!-- Date Added -->
                                <p class="card-text small text-muted">
                                    <strong>Date Created:</strong> @ticket.DateAdded.ToString("MMMM dd, yyyy")
                                </p>

                                <!-- Status -->
                                <p class="card-text small text-muted">
                                    <strong>Status:</strong> <span class="badge bg-@GetStatusBadgeClass(ticket.StatusName) text-uppercase">@ticket.StatusName</span>
                                </p>

                                <!-- Category -->
                                <p class="card-text small text-muted">
                                    <strong>Category:</strong> @ticket.CategoryName
                                </p>

                                <!-- View Details Button -->
                                <a asp-action="ViewTicket" asp-controller="Ticket" asp-route-id="@ticket.TicketId" class="btn btn-dark w-100">
                                    View Details
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }

</div>


<div class="modal fade" id="deleteUserModal-@Model.UserId" tabindex="-1" aria-labelledby="deleteUserModalLabel-@Model.UserId" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteUserModalLabel">Delete User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this user?</p>
                <p><strong>Name: </strong>@Model.Name</p>
                <p><strong>Email: </strong>@Model.Email</p>
                <p>
                    <strong>Role: </strong>
                    @if (Model.RoleName == "Super Admin")
                    {
                        <span>@Model.RoleName</span>
                    }
                    else if (Model.RoleName == "Admin")
                    {
                        <span>@Model.RoleName</span>
                    }
                    else if (Model.RoleName == "Agent")
                    {
                        <span>@Model.RoleName</span>
                    }
                    else if (Model.RoleName == "User")
                    {
                        <span>@Model.RoleName</span>
                    }
                    else
                    {
                        <span>@Model.RoleName</span>
                    }
                </p>
                <form asp-action="Delete" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="UserId" value="@Model.UserId" />
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetStatusBadgeClass(string status)
    {
        return status.ToLower() switch
        {
            "open" => "primary",
            "in progress" => "warning",
            "resolved" => "success",
            "closed" => "danger",
            "on hold" => "secondary",
            _ => "dark" // Fallback for unexpected values
        };
    }

    public string GetPriorityBadgeClass(string priority)
    {
        return priority.ToLower() switch
        {
            "high" => "danger",
            "medium" => "warning",
            "low" => "success",
            _ => "secondary"
        };
    }
}

<script>
    // Function to render star ratings
    function renderStarRating(rating) {
        const totalStars = 5; // Max rating is 5 stars
        let starsHtml = '';

        // Create filled stars
        for (let i = 0; i < rating; i++) {
            starsHtml += '<i class="fas fa-star text-warning"></i>';
        }

        // Create empty stars
        for (let i = rating; i < totalStars; i++) {
            starsHtml += '<i class="far fa-star"></i>';
        }

        return starsHtml;
    }

    // Call the function to render stars based on the CustomerRating
    document.addEventListener("DOMContentLoaded", function () {
        const rating = @Model.CustomerRating; // Assuming the value is a float (e.g., 3.50)
        const starContainer = document.getElementById(`star-rating-@Model.Email`);
        starContainer.innerHTML = renderStarRating(Math.round(rating)); // Rounding the rating to nearest whole number
    });
</script>