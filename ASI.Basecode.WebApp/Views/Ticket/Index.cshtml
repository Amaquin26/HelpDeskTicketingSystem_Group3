@{
    ViewData["Title"] = "Ticket Page";
}
@model IEnumerable<ASI.Basecode.Services.Dto.TicketDto>

<!-- Main Content -->
<div class="content p-4" style="margin-left: 200px;">
    <h3 class="mb-4"><strong>Ticket Summary</strong></h3>
    <div class="row">
        <!-- Tickets by Category -->
        <div class="col-md-4 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Tickets by Category</h5>
                    <div class="chart-container">
                        <canvas id="ticketsByCategoryChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Tickets by Status -->
        <div class="col-md-4 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Tickets by Status</h5>
                    <div class="chart-container">
                        <canvas id="ticketsByStatusChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Tickets by Priority -->
        <div class="col-md-4 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Tickets by Priority</h5>
                    <div class="chart-container">
                        <canvas id="ticketsByPriorityChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <h3 class="mb-4"><strong>Ticket Management</strong></h3>

    <!-- Dynamic Tickets List Table -->
    <div class="table-responsive">
        <table id="ticketTable" class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Issue</th>
                    <th scope="col">Created By</th>
                    <th scope="col">Category</th>
                    <th scope="col">Priority</th>
                    <th scope="col">Status</th>
                    <th scope="col" class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody id="ticketList">
                @if (Model != null && Model.Any())
                {
                    int index = 1; // To maintain the row number
                    foreach (var ticket in Model)
                    {
                        <tr>
                            <td>@index</td>
                            <td>@ticket.Description</td>
                            <td>@ticket.CreatedBy</td>
                            <td>@ticket.CategoryName</td>
                            <td>@ticket.PriorityName</td>
                            <td>@ticket.StatusName</td>
                            <td class="text-center">
                                <!-- Example actions (Edit, Delete, etc.) -->
                                <a href="@Url.Action("ViewTicket", "Ticket", new { ticketId = ticket.TicketId })" class="edit btn btn-outline-primary btn-sm"><i class="fas fa-eye"></i></a>
                                <a href="@Url.Action("EditTicket", "Ticket", new { ticketId = ticket.TicketId })" class="edit btn btn-outline-danger btn-sm edit-btn"><i class="fas fa-edit"></i></a>
                                <a href="#"
                                   class="edit btn btn-outline-danger btn-sm delete-btn"
                                   data-bs-toggle="modal"
                                   data-bs-target="#deleteTicketModal"
                                   data-ticket-id="@ticket.TicketId"
                                   data-ticket-status="@ticket.StatusName"
                                   data-ticket-priority="@ticket.PriorityName"
                                   data-ticket-category="@ticket.CategoryName">
                                    <i class="fas fa-trash-alt"></i>
                                </a>
                            </td>
                        </tr>
                        index++; // Increment the row number
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center">No tickets available.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Floating Add User Button -->
<a asp-action="AddTicket" asp-controller="Ticket" class="text-decoration-none btn btn-danger floating-btn d-flex" style="border-radius:999999px !important;"><i class="fas fa-plus"></i></a>

<!-- Delete Ticket Modal -->
<div class="modal fade" id="deleteTicketModal" tabindex="-1" aria-labelledby="deleteTicketModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteTicketModalLabel">Delete Ticket</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this ticket?</p>
                <p><strong>Ticket ID# </strong><span id="ticketId"></span></p>
                <p><strong>Status: </strong><span class="status"></span></p>
                <p><strong>Priority: </strong><span class="priority"></span></p>
                <p><strong>Category: </strong><span class="category"></span></p>
                <button type="button" class="btn btn-danger w-100">Delete Ticket</button>
            </div>
        </div>
    </div>
</div>

<!-- Include jQuery before DataTables -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/js/all.min.js"></script>
<!-- Include Bootstrap and Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Chart Data and Configuration

    // Tickets by Category
    const ticketsByCategoryCtx = document.getElementById('ticketsByCategoryChart').getContext('2d');
    new Chart(ticketsByCategoryCtx, {
        type: 'doughnut',
        data: {
            labels: ['Technical', 'Billing', 'General Inquiry'],
            datasets: [{
                data: [50, 30, 20],
                backgroundColor: ['#ffcfd4', '#fd838e', '#dc3545']
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'bottom', // Position legend at the bottom
                    align: 'center', // Align legend in the center
                    labels: {
                        boxWidth: 20, // Adjust the width of the legend color box
                        padding: 20,  // Adjust the spacing between legend items
                    }
                }
            }
        }
    });

    // Tickets by Status
    const ticketsByStatusCtx = document.getElementById('ticketsByStatusChart').getContext('2d');
    new Chart(ticketsByStatusCtx, {
        type: 'pie',
        data: {
            labels: ['Open', 'In Progress', 'Closed'],
            datasets: [{
                data: [40, 30, 30],
                backgroundColor: ['#dc3545', '#fd838e', '#d9cbcc']
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'bottom', // Position legend at the bottom
                    align: 'center', // Align legend in the center
                    labels: {
                        boxWidth: 20, // Adjust the width of the legend color box
                        padding: 20,  // Adjust the spacing between legend items
                    }
                }
            }
        }
    });

    // Tickets by Priority
    const ticketsByPriorityCtx = document.getElementById('ticketsByPriorityChart').getContext('2d');
    new Chart(ticketsByPriorityCtx, {
        type: 'bar',
        data: {
            labels: ['High', 'Medium', 'Low'],
            datasets: [{
                label: '# of Tickets',
                data: [25, 45, 30],
                backgroundColor: ['#e04d5b', '#f6ce54', '#308e62']
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    display: false // Hide the legend for the bar chart
                }
            },
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var deleteButtons = document.querySelectorAll('.delete-btn');
        var ticketIdElement = document.getElementById('ticketId');
        var statusElement = document.querySelector('.status');
        var priorityElement = document.querySelector('.priority');
        var categoryElement = document.querySelector('.category');

        deleteButtons.forEach(function (button) {
            button.addEventListener('click', function () {
                // Get ticket details from data attributes
                var ticketId = this.getAttribute('data-ticket-id');
                var status = this.getAttribute('data-ticket-status');
                var priority = this.getAttribute('data-ticket-priority');
                var category = this.getAttribute('data-ticket-category');

                // Populate the modal with the ticket data
                ticketIdElement.textContent = ticketId;
                statusElement.textContent = status;
                priorityElement.textContent = priority;
                categoryElement.textContent = category;
            });
        });
    });

    document.querySelector('#deleteTicketModal .btn-danger').addEventListener('click', function () {
        var ticketId = document.getElementById('ticketId').textContent;

        // Perform an AJAX request or form submission to delete the ticket
        fetch(`/Ticket/DeleteTicket`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ ticketId})
        })
            .then(response => {
                if (response.ok) {
                    // Close modal and refresh or update the table
                    location.reload(); // Or remove the row from the table
                } else {
                    alert('Failed to delete ticket.');
                }
            })
            .catch(error => console.error('Error:', error));
    });
</script>


